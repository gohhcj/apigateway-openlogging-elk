input { pipeline { address => "Events" } }

filter {
  # Use the given timestamp from the event for the logstash timestamp and send to ElasticSearch
  date {
      match => [ "time", "UNIX_MS" ]
  }
  # Drop all other events than system and alerts
  # Also drop all transaction events if they don't contain a transactionId
  if ([type] != "system" and [type] != "alert" and ([type] == "transaction" and ![customMsgAtts][transactionId] )) {
    drop { }
  }
  if([type] == "transaction") {
    # We only need the transactionId, which might be set by a policy
    mutate {
      rename => ["[customMsgAtts][transactionId]", "[transactionId]" ]
    }
    # Remove everything else we don't need
    prune {
      whitelist_names => [ "transactionId", "correlationId" ]
    }
  } else {
    mutate {
      add_field => { "[processInfo][gatewayName]" => "%{[gatewayName]}" }
      add_field => { "[processInfo][gatewayRegion]" => "%{[gatewayRegion]}" }
      remove_field => [ "agent", "log", "logtype", "tags", "ecs", "time", "gatewayRegion", "gatewayName", "host", "id", "event" ]
      # Convert give KBytes into Bytes as they can be visualized better in Kibana
      update => { "instMem" => "%{[instMem]}000" }
      update => { "sysMem" => "%{[sysMem]}000" }
      update => { "sysMemTotal" => "%{[sysMemTotal]}000" }
    }
  }
}

output {
  # If we have a transactionId, add it to the Traffic-Summary index
  if [transactionId] {
    elasticsearch {
      hosts => "${ELASTICSEARCH_HOSTS}"
      ssl => true
      cacert => "${ELASTICSEARCH_CERT}"
      user => "${LOGSTASH_USERNAME}"
      password => "${LOGSTASH_PASSWORD}"
      index => "apigw-traffic-summary%{[@metadata][regionIndexSuffix]}"
      document_id => "%{correlationId}"
      action => "update"
      doc_as_upsert => true
      id => "TrafficSummaryTransactionId"
    }
  } else {
    elasticsearch {
      hosts => "${ELASTICSEARCH_HOSTS}"
      ssl => true
      cacert => "${ELASTICSEARCH_CERT}"
      user => "${LOGSTASH_USERNAME}"
      password => "${LOGSTASH_PASSWORD}"
      index => "apigw-monitoring%{[@metadata][regionIndexSuffix]}"
      id => "MonitoringInformation"
    }
  }
# Enable if you would like to see outgoing event messages
  stdout {
    codec => rubydebug
  }
}